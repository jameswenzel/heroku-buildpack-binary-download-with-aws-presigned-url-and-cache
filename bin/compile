#!/bin/bash
# bin/compile <build-dir> <cache-dir> <env-dir>

if [ $(uname) == Darwin ]; then
    sed() { command sed -l "$@"; }
else
    sed() { command sed -u "$@"; }
fi

indent() {
  sed "s/^/       /"
}

echo "-----> Found .release file"

s3_url=$(cat $1/.release | sed -n '1p')
echo "Download URL: $url..." | indent

version=$(cat $1/.release | sed -n '2p')
echo "Version: $version..." | indent

output=$(cat $1/.release | sed -n '3p')
echo "Output file name: $output..." | indent

exported_name=$(cat $1/.release | sed -n '4p')
echo "Export var name: $exported_name..." | indent

if [ -f "$2/$version/$output" ]; then
	echo "-----> Binary is present in cache as $version/$output!"
else
	echo "Downloading binary from $s3_url as $version/$output..." | indent
	mkdir -p $2/$version/
	AWS_ACCESS_KEY_ID=$(cat "$ENV_DIR/AWS_ACCESS_KEY_ID")
	AWS_SECRET_ACCESS_KEY=$(cat "$ENV_DIR/AWS_SECRET_ACCESS_KEY")
	AWS_DEFAULT_REGION=$(cat "$ENV_DIR/AWS_DEFAULT_REGION")
	presigned_url=$(aws s3 presign $s3_url --expires-in 600)
	curl -L --max-time 60 -o $2/$version/$output $presigned_url
	echo "-----> Binary downloaded from $presigned_url as $version/$output!"
fi

# Copy cached binary to build directory
cp $2/$version/$output $1/$output
# export exported_name var 
declare -x $exported_name=$1/$output

# Ensure binary has sane permissions allowing it to be executed
chmod a+x $1/$output

exit $?
